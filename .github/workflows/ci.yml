name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [8, 11]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run tests
      run: mvn clean test
      
    - name: Generate test report
      uses: dorny/test-reporter@v1.9.1
      if: success() || failure()
      with:
        name: Maven Tests (Java ${{ matrix.java-version }})
        path: target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: false
      continue-on-error: true
      
    - name: Test Summary (Fallback)
      if: always()
      run: |
        echo "## Test Results Summary (Java ${{ matrix.java-version }})" >> $GITHUB_STEP_SUMMARY
        if [ -d "target/surefire-reports" ]; then
          echo "üìä Test reports generated in target/surefire-reports/" >> $GITHUB_STEP_SUMMARY
          echo "üìÅ Test result files:" >> $GITHUB_STEP_SUMMARY
          ls -la target/surefire-reports/ >> $GITHUB_STEP_SUMMARY
        else
          echo "‚ö†Ô∏è No test reports found" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-java-${{ matrix.java-version }}
        path: target/surefire-reports/
        
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run OWASP Dependency Check
      run: |
        mvn org.owasp:dependency-check-maven:check
      continue-on-error: true
      
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan-results
        path: target/dependency-check-report.html
        
  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Compile and package
      run: mvn clean compile package -DskipTests
      
    - name: Check for security best practices
      run: |
        echo "Checking for hardcoded secrets..."
        if grep -r "password\|secret\|key" src/main/java --include="*.java" | grep -v "// " | grep -v "/\*" | grep -v "getPassword\|setPassword\|Password(" | grep -v "SecretKey\|KeyStore"; then
          echo "‚ö†Ô∏è  Potential hardcoded secrets found!"
          exit 1
        else
          echo "‚úÖ No hardcoded secrets detected"
        fi
        
    - name: Verify SSL configuration
      run: |
        echo "Checking SSL configuration..."
        if [ -f "src/main/resources/keystore.p12" ]; then
          echo "‚úÖ SSL keystore found"
        else
          echo "‚ö†Ô∏è  SSL keystore not found"
        fi
        
  build-verification:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: [test, security-scan, code-quality]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build application
      run: mvn clean package
      
    - name: Verify JAR creation
      run: |
        if [ -f "target/ssl-server-0.0.1-SNAPSHOT.jar" ]; then
          echo "‚úÖ JAR file created successfully"
          ls -la target/*.jar
        else
          echo "‚ùå JAR file not found"
          exit 1
        fi
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: target/*.jar
        
  pr-status-check:
    name: PR Status Check
    runs-on: ubuntu-latest
    needs: [test, security-scan, code-quality, build-verification]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: PR Ready for Merge
      run: |
        echo "üéâ All checks passed! PR is ready for merge."
        echo "‚úÖ Tests: Passed"
        echo "‚úÖ Security Scan: Completed"
        echo "‚úÖ Code Quality: Verified"
        echo "‚úÖ Build: Successful"